/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DayOfWeek } from './DayOfWeek';
import {
    DayOfWeekFromJSON,
    DayOfWeekFromJSONTyped,
    DayOfWeekToJSON,
} from './DayOfWeek';

/**
 * 
 * @export
 * @interface WeeklyScheduleInterval
 */
export interface WeeklyScheduleInterval {
    /**
     * 
     * @type {DayOfWeek}
     * @memberof WeeklyScheduleInterval
     */
    dayOfWeek: DayOfWeek;
    /**
     * The hour the schedule interval starts.
     * @type {number}
     * @memberof WeeklyScheduleInterval
     */
    hour: number;
    /**
     * The minutes of hours the schedule interval starts.
     * @type {number}
     * @memberof WeeklyScheduleInterval
     */
    minute: number;
    /**
     * The duration of the schedule interval in [min].
     * @type {number}
     * @memberof WeeklyScheduleInterval
     */
    duration: number;
}

/**
 * Check if a given object implements the WeeklyScheduleInterval interface.
 */
export function instanceOfWeeklyScheduleInterval(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dayOfWeek" in value;
    isInstance = isInstance && "hour" in value;
    isInstance = isInstance && "minute" in value;
    isInstance = isInstance && "duration" in value;

    return isInstance;
}

export function WeeklyScheduleIntervalFromJSON(json: any): WeeklyScheduleInterval {
    return WeeklyScheduleIntervalFromJSONTyped(json, false);
}

export function WeeklyScheduleIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): WeeklyScheduleInterval {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dayOfWeek': DayOfWeekFromJSON(json['dayOfWeek']),
        'hour': json['hour'],
        'minute': json['minute'],
        'duration': json['duration'],
    };
}

export function WeeklyScheduleIntervalToJSON(value?: WeeklyScheduleInterval | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dayOfWeek': DayOfWeekToJSON(value.dayOfWeek),
        'hour': value.hour,
        'minute': value.minute,
        'duration': value.duration,
    };
}


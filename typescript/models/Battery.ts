/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Physical properties of the battery regarding capacity and charging. It is null for an unpowered vehicle.
 * 
 * Relevant for `range calculation`.
 * @export
 * @interface Battery
 */
export interface Battery {
    /**
     * The total battery capacity [kWh].
     * @type {number}
     * @memberof Battery
     */
    totalCapacity: number;
    /**
     * Charging power AC [kW].
     * @type {number}
     * @memberof Battery
     */
    acChargingPower: number;
    /**
     * Charging power DC [kW].
     * @type {number}
     * @memberof Battery
     */
    dcChargingPower: number;
    /**
     * List of charging plugs the vehicle is compatible with.
     * @type {Array<string>}
     * @memberof Battery
     */
    plugs: Array<string>;
}

/**
 * Check if a given object implements the Battery interface.
 */
export function instanceOfBattery(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalCapacity" in value;
    isInstance = isInstance && "acChargingPower" in value;
    isInstance = isInstance && "dcChargingPower" in value;
    isInstance = isInstance && "plugs" in value;

    return isInstance;
}

export function BatteryFromJSON(json: any): Battery {
    return BatteryFromJSONTyped(json, false);
}

export function BatteryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Battery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalCapacity': json['totalCapacity'],
        'acChargingPower': json['acChargingPower'],
        'dcChargingPower': json['dcChargingPower'],
        'plugs': json['plugs'],
    };
}

export function BatteryToJSON(value?: Battery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalCapacity': value.totalCapacity,
        'acChargingPower': value.acChargingPower,
        'dcChargingPower': value.dcChargingPower,
        'plugs': value.plugs,
    };
}


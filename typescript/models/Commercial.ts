/* tslint:disable */
/* eslint-disable */
/**
 * Data
 * With the Data service you can obtain additional data such as vehicle profiles.
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Properties of a vehicle from a commercial point of view.
 * @export
 * @interface Commercial
 */
export interface Commercial {
    /**
     * The producer of the vehicle.
     * @type {string}
     * @memberof Commercial
     */
    manufacturer: string;
    /**
     * The model of the vehicle.
     * @type {string}
     * @memberof Commercial
     */
    model: string;
    /**
     * The model variant of the vehicle.
     * @type {string}
     * @memberof Commercial
     */
    variant?: string;
    /**
     * The year the vehicle was launched on the market.
     * @type {number}
     * @memberof Commercial
     */
    launchYear?: number;
}

/**
 * Check if a given object implements the Commercial interface.
 */
export function instanceOfCommercial(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "manufacturer" in value;
    isInstance = isInstance && "model" in value;

    return isInstance;
}

export function CommercialFromJSON(json: any): Commercial {
    return CommercialFromJSONTyped(json, false);
}

export function CommercialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Commercial {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'manufacturer': json['manufacturer'],
        'model': json['model'],
        'variant': !exists(json, 'variant') ? undefined : json['variant'],
        'launchYear': !exists(json, 'launchYear') ? undefined : json['launchYear'],
    };
}

export function CommercialToJSON(value?: Commercial | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'manufacturer': value.manufacturer,
        'model': value.model,
        'variant': value.variant,
        'launchYear': value.launchYear,
    };
}

